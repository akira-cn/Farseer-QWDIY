<!DOCTYPE HTML>
<html>
<head>
	<title>QWrap 应用手册</title>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
	<link type="text/css" media="screen" rel="stylesheet" href="../../css/css.css">
	<script type="text/javascript" src="../../js/apps/core_dom_youa.js"></script>
	<script type="text/javascript" src="../../js/qwrapdoc/doc_core_dom_youa.js"></script>
	<script type="text/javascript" src="../../js/qwrapdoc/codehighlight_and_page.js"></script>
</head>
<body>
<div id=doc1>
	<!-- hd start -->
	<div id="hd">
		<strong>QWrap 常用查询手册</strong>
	</div>
	<!-- hd end -->
	<!-- bd start -->
	<div id="bd">
		<div class="item">
			<div>
				<h2>Array 简介 </h2>
				<p>为方便应用，Youa版QWrap对Array和Array.prototype进行了渲染。</p>
				<p>渲染Array所用到的Helper有：QW.ArrayH、QW.HashsetH</p>
				<p>QW所实现的方法，已与标准保持一致。如果浏览器引擎已实现，不会被QW覆盖。</p>
				<p>渲染Array.prototype有利有弊。渲染Array.prototype后，可以直接这样调用[1].forEach(....)，但是也会导致：<font color='red'>用户不能再对数组进行for in循环</font>。</p>
			</div>
			<hr/>
		</div>

		<table  cellspacing="0" cellpadding="0" rules="cols" class="list">
		<tr>
			<td>
				<h3>常见用法</h3>
				<ul>
				<script>
					QWDoc.writeLinks('./',QWDoc.data.QW.ArrayH._methods);
				</script>
				</ul>
			</td>
		</tr>
		</table>

	</div>
	<!-- bd end -->
	<!-- ft start -->
	<div id="ft">
		QW 
	</div>
	<!-- ft end -->
</div>
</body>
</html>